var cache = {}
function _require(f) {
  return cache[f] || require(f == "../builtins.js" ? "./builtins.js" : f);
}
cache["prelude.jg"] = (function() {var $add = ((_require)("../builtins.js"))["$add"];
var $del = ((_require)("../builtins.js"))["$del"];
var $mul = ((_require)("../builtins.js"))["$mul"];
var $lt = ((_require)("../builtins.js"))["$lt"];
var $gt = ((_require)("../builtins.js"))["$gt"];
var $eq = ((_require)("../builtins.js"))["$eq"];
var $neq = ((_require)("../builtins.js"))["$neq"];
var $and = ((_require)("../builtins.js"))["$and"];
var $or = ((_require)("../builtins.js"))["$or"];
var $concat = ((_require)("../builtins.js"))["$concat"];
var empty = ((_require)("../builtins.js"))["empty"];
var get = ((_require)("../builtins.js"))["get"];
var del = ((_require)("../builtins.js"))["del"];
var set = ((_require)("../builtins.js"))["set"];
var unsafeStringToInt = ((_require)("../builtins.js"))["unsafeStringToInt"];
var match = ((_require)("../builtins.js"))["match"];
var drop = ((_require)("../builtins.js"))["drop"];
var length = ((_require)("../builtins.js"))["length"];
var emptyArray = ((_require)("../builtins.js"))["emptyArray"];
var push = ((_require)("../builtins.js"))["push"];
var enqueue = ((_require)("../builtins.js"))["enqueue"];
var intToString = ((_require)("../builtins.js"))["intToString"];
var intercalate = ((_require)("../builtins.js"))["intercalate"];
var slice = ((_require)("../builtins.js"))["slice"];
var concat = ((_require)("../builtins.js"))["concat"];
var map = ((_require)("../builtins.js"))["map"];
var filter = ((_require)("../builtins.js"))["filter"];
var foldr = ((_require)("../builtins.js"))["foldr"];
var foldr1 = ((_require)("../builtins.js"))["foldr1"];
var foldl = ((_require)("../builtins.js"))["foldl"];
var foldl1 = ((_require)("../builtins.js"))["foldl1"];
var error = ((_require)("../builtins.js"))["error"];
var jsonStringify = ((_require)("../builtins.js"))["jsonStringify"];
var iterate = ((_require)("../builtins.js"))["iterate"];
var True = ((_require)("../builtins.js"))["True"];
var False = ((_require)("../builtins.js"))["False"];
var $Just = function($0){((this)["$0"])=($0)};
var Just = function($0){return new ($Just)($0)};
var $Nothing = function(){};
var Nothing = new ($Nothing)();
var $Pair = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var Pair = function($0){return function($1){return new ($Pair)($0,$1)}};
var $Left = function($0){((this)["$0"])=($0)};
var Left = function($0){return new ($Left)($0)};
var $Right = function($0){((this)["$0"])=($0)};
var Right = function($0){return new ($Right)($0)};
var maybe = function(a){return function(b){return function(m){return (function(){var $pm = m;return ((($pm) instanceof ($Just))&&(true))?((function(x){return (a)(x)})(($pm)["$0"])):((($pm) instanceof ($Nothing))?((function(){return b})()):((error)("pattern match fail")))})()}}};
var fst = function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(a,b){return a})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()};
var snd = function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(a,b){return b})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()};
var either = function(f){return function(g){return function(e){return (function(){var $pm = e;return ((($pm) instanceof ($Left))&&(true))?((function(a){return (f)(a)})(($pm)["$0"])):(((($pm) instanceof ($Right))&&(true))?((function(b){return (g)(b)})(($pm)["$0"])):((error)("pattern match fail")))})()}}};
var splitEither = function(a){return ((Pair)(((map)(function(e){return (function(){var $pm = e;return ((($pm) instanceof ($Left))&&(true))?((function(a){return a})(($pm)["$0"])):((error)("pattern match fail"))})()}))(((filter)(((either)(function(_){return true}))(function(_){return false})))(a))))(((map)(function(e){return (function(){var $pm = e;return ((($pm) instanceof ($Right))&&(true))?((function(b){return b})(($pm)["$0"])):((error)("pattern match fail"))})()}))(((filter)(((either)(function(_){return false}))(function(_){return true})))(a)))};
var not = function(b){return (function(){var $pm = b;return ($pm)?((function(){return false})()):((!($pm))?((function(){return true})()):((error)("pattern match fail")))})()};
var contains2 = function(x){return function(xs){return function(i){return (function(){var $pm = (($lt)(i))((length)(xs));return ($pm)?((function(){return (function(){var $pm = (($eq)(((get)(i))(xs)))(x);return ($pm)?((function(){return true})()):((!($pm))?((function(){return (((contains2)(x))(xs))((($add)(i))(1))})()):((error)("pattern match fail")))})()})()):((!($pm))?((function(){return false})()):((error)("pattern match fail")))})()}}};
var contains = function(x){return function(xs){return (((contains2)(x))(xs))(0)}};
var join = function(xs){return function(s){return (function(){var $pm = (length)(xs);return ((0)==($pm))?((function(){return ""})()):((true)?((function(n){return ((foldl1)(function(a){return function(b){return (($concat)((($concat)(a))(s)))(b)}}))(xs)})($pm)):((error)("pattern match fail")))})()}};
var zipWithIndex2 = function(n){return function(xs){return (function(){var $pm = (length)(xs);return ((0)==($pm))?((function(){return emptyArray})()):((true)?((function(x){return ((enqueue)(((Pair)(n))(((get)(0))(xs))))(((zipWithIndex2)((($add)(n))(1)))(((slice)(1))(xs)))})($pm)):((error)("pattern match fail")))})()}};
var zipWithIndex = (zipWithIndex2)(0);
var concatMap = function(f){return function(a){return (((foldl)(concat))(emptyArray))(((map)(f))(a))}};
var exports = {Just:Just,$Just:$Just,Nothing:Nothing,$Nothing:$Nothing,Pair:Pair,$Pair:$Pair,Left:Left,$Left:$Left,Right:Right,$Right:$Right,maybe:maybe,fst:fst,snd:snd,either:either,splitEither:splitEither,not:not,contains2:contains2,contains:contains,join:join,zipWithIndex2:zipWithIndex2,zipWithIndex:zipWithIndex,concatMap:concatMap}
return exports;})();
cache["ast.jg"] = (function() {var $add = ((_require)("../builtins.js"))["$add"];
var $del = ((_require)("../builtins.js"))["$del"];
var $mul = ((_require)("../builtins.js"))["$mul"];
var $lt = ((_require)("../builtins.js"))["$lt"];
var $gt = ((_require)("../builtins.js"))["$gt"];
var $eq = ((_require)("../builtins.js"))["$eq"];
var $neq = ((_require)("../builtins.js"))["$neq"];
var $and = ((_require)("../builtins.js"))["$and"];
var $or = ((_require)("../builtins.js"))["$or"];
var $concat = ((_require)("../builtins.js"))["$concat"];
var empty = ((_require)("../builtins.js"))["empty"];
var get = ((_require)("../builtins.js"))["get"];
var del = ((_require)("../builtins.js"))["del"];
var set = ((_require)("../builtins.js"))["set"];
var unsafeStringToInt = ((_require)("../builtins.js"))["unsafeStringToInt"];
var match = ((_require)("../builtins.js"))["match"];
var drop = ((_require)("../builtins.js"))["drop"];
var length = ((_require)("../builtins.js"))["length"];
var emptyArray = ((_require)("../builtins.js"))["emptyArray"];
var push = ((_require)("../builtins.js"))["push"];
var enqueue = ((_require)("../builtins.js"))["enqueue"];
var intToString = ((_require)("../builtins.js"))["intToString"];
var intercalate = ((_require)("../builtins.js"))["intercalate"];
var slice = ((_require)("../builtins.js"))["slice"];
var concat = ((_require)("../builtins.js"))["concat"];
var map = ((_require)("../builtins.js"))["map"];
var filter = ((_require)("../builtins.js"))["filter"];
var foldr = ((_require)("../builtins.js"))["foldr"];
var foldr1 = ((_require)("../builtins.js"))["foldr1"];
var foldl = ((_require)("../builtins.js"))["foldl"];
var foldl1 = ((_require)("../builtins.js"))["foldl1"];
var error = ((_require)("../builtins.js"))["error"];
var jsonStringify = ((_require)("../builtins.js"))["jsonStringify"];
var iterate = ((_require)("../builtins.js"))["iterate"];
var True = ((_require)("../builtins.js"))["True"];
var False = ((_require)("../builtins.js"))["False"];
var $Var = function($0){((this)["$0"])=($0)};
var Var = function($0){return new ($Var)($0)};
var $Const = function($0){((this)["$0"])=($0)};
var Const = function($0){return new ($Const)($0)};
var $App = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var App = function($0){return function($1){return new ($App)($0,$1)}};
var $Lam = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var Lam = function($0){return function($1){return new ($Lam)($0,$1)}};
var $Case = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var Case = function($0){return function($1){return new ($Case)($0,$1)}};
var $CNum = function($0){((this)["$0"])=($0)};
var CNum = function($0){return new ($CNum)($0)};
var $CStr = function($0){((this)["$0"])=($0)};
var CStr = function($0){return new ($CStr)($0)};
var $PVar = function($0){((this)["$0"])=($0)};
var PVar = function($0){return new ($PVar)($0)};
var $PConst = function($0){((this)["$0"])=($0)};
var PConst = function($0){return new ($PConst)($0)};
var $PData = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var PData = function($0){return function($1){return new ($PData)($0,$1)}};
var $Module = function($0,$1,$2){((this)["$0"])=($0);((this)["$1"])=($1);((this)["$2"])=($2)};
var Module = function($0){return function($1){return function($2){return new ($Module)($0,$1,$2)}}};
var $Data = function($0,$1,$2){((this)["$0"])=($0);((this)["$1"])=($1);((this)["$2"])=($2)};
var Data = function($0){return function($1){return function($2){return new ($Data)($0,$1,$2)}}};
var $DataCon = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var DataCon = function($0){return function($1){return new ($DataCon)($0,$1)}};
var $TConst = function($0){((this)["$0"])=($0)};
var TConst = function($0){return new ($TConst)($0)};
var $TVar = function($0){((this)["$0"])=($0)};
var TVar = function($0){return new ($TVar)($0)};
var $TApp = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var TApp = function($0){return function($1){return new ($TApp)($0,$1)}};
var $TFun = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var TFun = function($0){return function($1){return new ($TFun)($0,$1)}};
var $ImportClosed = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var ImportClosed = function($0){return function($1){return new ($ImportClosed)($0,$1)}};
var $ImportOpen = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var ImportOpen = function($0){return function($1){return new ($ImportOpen)($0,$1)}};
var $ImportAll = function($0){((this)["$0"])=($0)};
var ImportAll = function($0){return new ($ImportAll)($0)};
var exports = {Var:Var,$Var:$Var,Const:Const,$Const:$Const,App:App,$App:$App,Lam:Lam,$Lam:$Lam,Case:Case,$Case:$Case,CNum:CNum,$CNum:$CNum,CStr:CStr,$CStr:$CStr,PVar:PVar,$PVar:$PVar,PConst:PConst,$PConst:$PConst,PData:PData,$PData:$PData,Module:Module,$Module:$Module,Data:Data,$Data:$Data,DataCon:DataCon,$DataCon:$DataCon,TConst:TConst,$TConst:$TConst,TVar:TVar,$TVar:$TVar,TApp:TApp,$TApp:$TApp,TFun:TFun,$TFun:$TFun,ImportClosed:ImportClosed,$ImportClosed:$ImportClosed,ImportOpen:ImportOpen,$ImportOpen:$ImportOpen,ImportAll:ImportAll,$ImportAll:$ImportAll}
return exports;})();
cache["parsers.jg"] = (function() {var $add = ((_require)("../builtins.js"))["$add"];
var $del = ((_require)("../builtins.js"))["$del"];
var $mul = ((_require)("../builtins.js"))["$mul"];
var $lt = ((_require)("../builtins.js"))["$lt"];
var $gt = ((_require)("../builtins.js"))["$gt"];
var $eq = ((_require)("../builtins.js"))["$eq"];
var $neq = ((_require)("../builtins.js"))["$neq"];
var $and = ((_require)("../builtins.js"))["$and"];
var $or = ((_require)("../builtins.js"))["$or"];
var $concat = ((_require)("../builtins.js"))["$concat"];
var empty = ((_require)("../builtins.js"))["empty"];
var get = ((_require)("../builtins.js"))["get"];
var del = ((_require)("../builtins.js"))["del"];
var set = ((_require)("../builtins.js"))["set"];
var unsafeStringToInt = ((_require)("../builtins.js"))["unsafeStringToInt"];
var match = ((_require)("../builtins.js"))["match"];
var drop = ((_require)("../builtins.js"))["drop"];
var length = ((_require)("../builtins.js"))["length"];
var emptyArray = ((_require)("../builtins.js"))["emptyArray"];
var push = ((_require)("../builtins.js"))["push"];
var enqueue = ((_require)("../builtins.js"))["enqueue"];
var intToString = ((_require)("../builtins.js"))["intToString"];
var intercalate = ((_require)("../builtins.js"))["intercalate"];
var slice = ((_require)("../builtins.js"))["slice"];
var concat = ((_require)("../builtins.js"))["concat"];
var map = ((_require)("../builtins.js"))["map"];
var filter = ((_require)("../builtins.js"))["filter"];
var foldr = ((_require)("../builtins.js"))["foldr"];
var foldr1 = ((_require)("../builtins.js"))["foldr1"];
var foldl = ((_require)("../builtins.js"))["foldl"];
var foldl1 = ((_require)("../builtins.js"))["foldl1"];
var error = ((_require)("../builtins.js"))["error"];
var jsonStringify = ((_require)("../builtins.js"))["jsonStringify"];
var iterate = ((_require)("../builtins.js"))["iterate"];
var True = ((_require)("../builtins.js"))["True"];
var False = ((_require)("../builtins.js"))["False"];
var Just = ((_require)("prelude.jg"))["Just"];
var $Just = ((_require)("prelude.jg"))["$Just"];
var Nothing = ((_require)("prelude.jg"))["Nothing"];
var $Nothing = ((_require)("prelude.jg"))["$Nothing"];
var Pair = ((_require)("prelude.jg"))["Pair"];
var $Pair = ((_require)("prelude.jg"))["$Pair"];
var Left = ((_require)("prelude.jg"))["Left"];
var $Left = ((_require)("prelude.jg"))["$Left"];
var Right = ((_require)("prelude.jg"))["Right"];
var $Right = ((_require)("prelude.jg"))["$Right"];
var maybe = ((_require)("prelude.jg"))["maybe"];
var fst = ((_require)("prelude.jg"))["fst"];
var snd = ((_require)("prelude.jg"))["snd"];
var either = ((_require)("prelude.jg"))["either"];
var splitEither = ((_require)("prelude.jg"))["splitEither"];
var not = ((_require)("prelude.jg"))["not"];
var contains2 = ((_require)("prelude.jg"))["contains2"];
var contains = ((_require)("prelude.jg"))["contains"];
var join = ((_require)("prelude.jg"))["join"];
var zipWithIndex2 = ((_require)("prelude.jg"))["zipWithIndex2"];
var zipWithIndex = ((_require)("prelude.jg"))["zipWithIndex"];
var concatMap = ((_require)("prelude.jg"))["concatMap"];
var $Success = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var Success = function($0){return function($1){return new ($Success)($0,$1)}};
var $Error = function($0){((this)["$0"])=($0)};
var Error = function($0){return new ($Error)($0)};
var and = function(a){return function(b){return function(s){return (function(){var $pm = (a)(s);return (((($pm) instanceof ($Success))&&(true))&&(true))?((function(a,s){return (function(){var $pm = (b)(s);return (((($pm) instanceof ($Success))&&(true))&&(true))?((function(b,s){return ((Success)(((Pair)(a))(b)))(s)})(($pm)["$0"],($pm)["$1"])):((true)?((function(e){return e})($pm)):((error)("pattern match fail")))})()})(($pm)["$0"],($pm)["$1"])):((true)?((function(e){return e})($pm)):((error)("pattern match fail")))})()}}};
var apply = function(f){return function(p){return function(s){return (function(){var $pm = (p)(s);return (((($pm) instanceof ($Success))&&(true))&&(true))?((function(r,s){return ((Success)((f)(r)))(s)})(($pm)["$0"],($pm)["$1"])):((true)?((function(e){return e})($pm)):((error)("pattern match fail")))})()}}};
var precedes = function(a){return function(b){return ((apply)(snd))(((and)(a))(b))}};
var succeeds = function(a){return function(b){return ((apply)(fst))(((and)(a))(b))}};
var between = function(a){return function(b){return function(c){return ((precedes)(a))(((succeeds)(b))(c))}}};
var or = function(a){return function(b){return function(s){return (function(){var $pm = (a)(s);return ((($pm) instanceof ($Error))&&(true))?((function(e){return (b)(s)})(($pm)["$0"])):((true)?((function(s){return s})($pm)):((error)("pattern match fail")))})()}}};
var manyIterate = function(p){return function(s){return (((iterate)((Left)(((Success)(emptyArray))(s))))(function(r){return (function(){var $pm = r;return ((($pm) instanceof ($Left))&&(true))?((function(s){return false})(($pm)["$0"])):(((($pm) instanceof ($Right))&&(true))?((function(s){return true})(($pm)["$0"])):((error)("pattern match fail")))})()}))(function(rs){return (function(){var $pm = rs;return ((($pm) instanceof ($Left))&&((((($pm)["$0"]) instanceof ($Success))&&(true))&&(true)))?((function(rs,s){return (function(){var $pm = (p)(s);return (((($pm) instanceof ($Success))&&(true))&&(true))?((function(r,s){return (Left)(((Success)(((push)(r))(rs)))(s))})(($pm)["$0"],($pm)["$1"])):(((($pm) instanceof ($Error))&&(true))?((function(e){return (Right)(((Success)(rs))(s))})(($pm)["$0"])):((error)("pattern match fail")))})()})((($pm)["$0"])["$0"],(($pm)["$0"])["$1"])):((error)("pattern match fail"))})()})}};
var many = function(p){return function(s){return (function(){var $pm = ((manyIterate)(p))(s);return ((($pm) instanceof ($Right))&&(true))?((function(a){return a})(($pm)["$0"])):(((($pm) instanceof ($Left))&&(true))?((function(b){return (error)("manyIterate should never return a Left")})(($pm)["$0"])):((error)("pattern match fail")))})()}};
var many1 = function(a){return function(s){return (function(){var $pm = (a)(s);return (((($pm) instanceof ($Success))&&(true))&&(true))?((function(r,s){return (((apply)((enqueue)(r)))((many)(a)))(s)})(($pm)["$0"],($pm)["$1"])):((true)?((function(e){return e})($pm)):((error)("pattern match fail")))})()}};
var sepBy1 = function(p){return function(s){return ((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(r,rs){return ((enqueue)(r))(rs)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((and)(p))((many)(((precedes)(s))(p))))}};
var opt = function(a){return function(s){return (function(){var $pm = (a)(s);return (((($pm) instanceof ($Success))&&(true))&&(true))?((function(r,s){return ((Success)((Just)(r)))(s)})(($pm)["$0"],($pm)["$1"])):((true)?((function(e){return ((Success)(Nothing))(s)})($pm)):((error)("pattern match fail")))})()}};
var digits = "0123456789";
var upperCaseLetters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
var letters = (($concat)("abcdefghijklmnopqrstuvwxyz"))(upperCaseLetters);
var exports = {Success:Success,$Success:$Success,Error:Error,$Error:$Error,and:and,apply:apply,precedes:precedes,succeeds:succeeds,between:between,or:or,manyIterate:manyIterate,many:many,many1:many1,sepBy1:sepBy1,opt:opt,digits:digits,upperCaseLetters:upperCaseLetters,letters:letters}
return exports;})();
cache["jaguarLexer.jg"] = (function() {var $add = ((_require)("../builtins.js"))["$add"];
var $del = ((_require)("../builtins.js"))["$del"];
var $mul = ((_require)("../builtins.js"))["$mul"];
var $lt = ((_require)("../builtins.js"))["$lt"];
var $gt = ((_require)("../builtins.js"))["$gt"];
var $eq = ((_require)("../builtins.js"))["$eq"];
var $neq = ((_require)("../builtins.js"))["$neq"];
var $and = ((_require)("../builtins.js"))["$and"];
var $or = ((_require)("../builtins.js"))["$or"];
var $concat = ((_require)("../builtins.js"))["$concat"];
var empty = ((_require)("../builtins.js"))["empty"];
var get = ((_require)("../builtins.js"))["get"];
var del = ((_require)("../builtins.js"))["del"];
var set = ((_require)("../builtins.js"))["set"];
var unsafeStringToInt = ((_require)("../builtins.js"))["unsafeStringToInt"];
var match = ((_require)("../builtins.js"))["match"];
var drop = ((_require)("../builtins.js"))["drop"];
var length = ((_require)("../builtins.js"))["length"];
var emptyArray = ((_require)("../builtins.js"))["emptyArray"];
var push = ((_require)("../builtins.js"))["push"];
var enqueue = ((_require)("../builtins.js"))["enqueue"];
var intToString = ((_require)("../builtins.js"))["intToString"];
var intercalate = ((_require)("../builtins.js"))["intercalate"];
var slice = ((_require)("../builtins.js"))["slice"];
var concat = ((_require)("../builtins.js"))["concat"];
var map = ((_require)("../builtins.js"))["map"];
var filter = ((_require)("../builtins.js"))["filter"];
var foldr = ((_require)("../builtins.js"))["foldr"];
var foldr1 = ((_require)("../builtins.js"))["foldr1"];
var foldl = ((_require)("../builtins.js"))["foldl"];
var foldl1 = ((_require)("../builtins.js"))["foldl1"];
var error = ((_require)("../builtins.js"))["error"];
var jsonStringify = ((_require)("../builtins.js"))["jsonStringify"];
var iterate = ((_require)("../builtins.js"))["iterate"];
var True = ((_require)("../builtins.js"))["True"];
var False = ((_require)("../builtins.js"))["False"];
var Just = ((_require)("prelude.jg"))["Just"];
var $Just = ((_require)("prelude.jg"))["$Just"];
var Nothing = ((_require)("prelude.jg"))["Nothing"];
var $Nothing = ((_require)("prelude.jg"))["$Nothing"];
var Pair = ((_require)("prelude.jg"))["Pair"];
var $Pair = ((_require)("prelude.jg"))["$Pair"];
var Left = ((_require)("prelude.jg"))["Left"];
var $Left = ((_require)("prelude.jg"))["$Left"];
var Right = ((_require)("prelude.jg"))["Right"];
var $Right = ((_require)("prelude.jg"))["$Right"];
var maybe = ((_require)("prelude.jg"))["maybe"];
var fst = ((_require)("prelude.jg"))["fst"];
var snd = ((_require)("prelude.jg"))["snd"];
var either = ((_require)("prelude.jg"))["either"];
var splitEither = ((_require)("prelude.jg"))["splitEither"];
var not = ((_require)("prelude.jg"))["not"];
var contains2 = ((_require)("prelude.jg"))["contains2"];
var contains = ((_require)("prelude.jg"))["contains"];
var join = ((_require)("prelude.jg"))["join"];
var zipWithIndex2 = ((_require)("prelude.jg"))["zipWithIndex2"];
var zipWithIndex = ((_require)("prelude.jg"))["zipWithIndex"];
var concatMap = ((_require)("prelude.jg"))["concatMap"];
var Success = ((_require)("parsers.jg"))["Success"];
var $Success = ((_require)("parsers.jg"))["$Success"];
var Error = ((_require)("parsers.jg"))["Error"];
var $Error = ((_require)("parsers.jg"))["$Error"];
var and = ((_require)("parsers.jg"))["and"];
var apply = ((_require)("parsers.jg"))["apply"];
var precedes = ((_require)("parsers.jg"))["precedes"];
var succeeds = ((_require)("parsers.jg"))["succeeds"];
var between = ((_require)("parsers.jg"))["between"];
var or = ((_require)("parsers.jg"))["or"];
var manyIterate = ((_require)("parsers.jg"))["manyIterate"];
var many = ((_require)("parsers.jg"))["many"];
var many1 = ((_require)("parsers.jg"))["many1"];
var sepBy1 = ((_require)("parsers.jg"))["sepBy1"];
var opt = ((_require)("parsers.jg"))["opt"];
var digits = ((_require)("parsers.jg"))["digits"];
var upperCaseLetters = ((_require)("parsers.jg"))["upperCaseLetters"];
var letters = ((_require)("parsers.jg"))["letters"];
var $LexerState = function($0,$1,$2,$3){((this)["$0"])=($0);((this)["$1"])=($1);((this)["$2"])=($2);((this)["$3"])=($3)};
var LexerState = function($0){return function($1){return function($2){return function($3){return new ($LexerState)($0,$1,$2,$3)}}}};
var $WsTok = function(){};
var WsTok = new ($WsTok)();
var $SymTok = function(){};
var SymTok = new ($SymTok)();
var $NumTok = function(){};
var NumTok = new ($NumTok)();
var $StrTok = function(){};
var StrTok = new ($StrTok)();
var $OpTok = function(){};
var OpTok = new ($OpTok)();
var $IdTok = function(){};
var IdTok = new ($IdTok)();
var $ComTok = function(){};
var ComTok = new ($ComTok)();
var $Token = function($0,$1,$2,$3){((this)["$0"])=($0);((this)["$1"])=($1);((this)["$2"])=($2);((this)["$3"])=($3)};
var Token = function($0){return function($1){return function($2){return function($3){return new ($Token)($0,$1,$2,$3)}}}};
var mkTok = function(t){return function(p){return function(i){return (function(){var $pm = i;return (((((($pm) instanceof ($LexerState))&&(true))&&(true))&&(true))&&(true))?((function(_1,_2,l,c){return (((apply)(function(r){return ((((Token)(t))(r))(l))(c)}))(p))(i)})(($pm)["$0"],($pm)["$1"],($pm)["$2"],($pm)["$3"])):((error)("pattern match fail"))})()}}};
var concatStr = (apply)(((foldl)(function(cs){return function(c){return (($concat)(cs))(c)}}))(""));
var runLexer = function(p){return function(s){return (p)(((((LexerState)(s))(0))(0))(0))}};
var parseChar = function(p){return function(s){return (function(){var $pm = s;return (((((($pm) instanceof ($LexerState))&&(true))&&(true))&&(true))&&(true))?((function(s,i,l,c){return (function(){var $pm = (p)(((get)(i))(s));return (!($pm))?((function(){return (Error)("parser failed")})()):(($pm)?((function(){return (function(){var $pm = ((get)(i))(s);return (("\n")==($pm))?((function(){return ((Success)(((get)(i))(s)))(((((LexerState)(s))((($add)(i))(1)))((($add)(l))(1)))(0))})()):((true)?((function(x){return ((Success)(((get)(i))(s)))(((((LexerState)(s))((($add)(i))(1)))(l))((($add)(c))(1)))})($pm)):((error)("pattern match fail")))})()})()):((error)("pattern match fail")))})()})(($pm)["$0"],($pm)["$1"],($pm)["$2"],($pm)["$3"])):((error)("pattern match fail"))})()}};
var anyCharP = (parseChar)(function(c){return true});
var charP = function(cs){return (parseChar)(function(c){return ((contains)(c))(cs)})};
var notCharP = function(cs){return (parseChar)(function(c){return (not)(((contains)(c))(cs))})};
var stringCharP = ((or)(((apply)(function(c){return "\n"}))(((and)((charP)("\\")))((charP)("n")))))(((or)(((precedes)((charP)("\\")))(anyCharP)))((notCharP)("'")));
var stringP = ((mkTok)(StrTok))((concatStr)((((between)((charP)("'")))((many)(stringCharP)))((charP)("'"))));
var whitespaceP = ((mkTok)(WsTok))((concatStr)((many1)((charP)(" \n"))));
var intP = (concatStr)((many1)((charP)(digits)));
var numP = ((mkTok)(NumTok))(((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(a,b){return (($concat)(a))(b)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((and)(intP))(((apply)(((maybe)(function(n){return (($concat)("."))(n)}))("")))((opt)(((precedes)((charP)(".")))(intP))))));
var lineCommentP = ((mkTok)(ComTok))((concatStr)(((precedes)(((and)((charP)("/")))((charP)("/"))))((many)((notCharP)("\n")))));
var symbolP = ((mkTok)(SymTok))((charP)("()[]{},\\"));
var identP = ((mkTok)(IdTok))(((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(a,b){return (($concat)(a))(b)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((and)((charP)((($concat)(letters))("_"))))((concatStr)((many)((charP)((($concat)((($concat)(letters))(digits)))("_")))))));
var opP = ((mkTok)(OpTok))((concatStr)((many1)((charP)("-+*/=:&|<>^"))));
var jaguarTokenP = (many)(((or)(stringP))(((or)(whitespaceP))(((or)(numP))(((or)(lineCommentP))(((or)(identP))(((or)(opP))(symbolP)))))));
var tokenize = (runLexer)(jaguarTokenP);
var exports = {LexerState:LexerState,$LexerState:$LexerState,WsTok:WsTok,$WsTok:$WsTok,SymTok:SymTok,$SymTok:$SymTok,NumTok:NumTok,$NumTok:$NumTok,StrTok:StrTok,$StrTok:$StrTok,OpTok:OpTok,$OpTok:$OpTok,IdTok:IdTok,$IdTok:$IdTok,ComTok:ComTok,$ComTok:$ComTok,Token:Token,$Token:$Token,mkTok:mkTok,concatStr:concatStr,runLexer:runLexer,parseChar:parseChar,anyCharP:anyCharP,charP:charP,notCharP:notCharP,stringCharP:stringCharP,stringP:stringP,whitespaceP:whitespaceP,intP:intP,numP:numP,lineCommentP:lineCommentP,symbolP:symbolP,identP:identP,opP:opP,jaguarTokenP:jaguarTokenP,tokenize:tokenize}
return exports;})();
cache["jaguarParser.jg"] = (function() {var $add = ((_require)("../builtins.js"))["$add"];
var $del = ((_require)("../builtins.js"))["$del"];
var $mul = ((_require)("../builtins.js"))["$mul"];
var $lt = ((_require)("../builtins.js"))["$lt"];
var $gt = ((_require)("../builtins.js"))["$gt"];
var $eq = ((_require)("../builtins.js"))["$eq"];
var $neq = ((_require)("../builtins.js"))["$neq"];
var $and = ((_require)("../builtins.js"))["$and"];
var $or = ((_require)("../builtins.js"))["$or"];
var $concat = ((_require)("../builtins.js"))["$concat"];
var empty = ((_require)("../builtins.js"))["empty"];
var get = ((_require)("../builtins.js"))["get"];
var del = ((_require)("../builtins.js"))["del"];
var set = ((_require)("../builtins.js"))["set"];
var unsafeStringToInt = ((_require)("../builtins.js"))["unsafeStringToInt"];
var match = ((_require)("../builtins.js"))["match"];
var drop = ((_require)("../builtins.js"))["drop"];
var length = ((_require)("../builtins.js"))["length"];
var emptyArray = ((_require)("../builtins.js"))["emptyArray"];
var push = ((_require)("../builtins.js"))["push"];
var enqueue = ((_require)("../builtins.js"))["enqueue"];
var intToString = ((_require)("../builtins.js"))["intToString"];
var intercalate = ((_require)("../builtins.js"))["intercalate"];
var slice = ((_require)("../builtins.js"))["slice"];
var concat = ((_require)("../builtins.js"))["concat"];
var map = ((_require)("../builtins.js"))["map"];
var filter = ((_require)("../builtins.js"))["filter"];
var foldr = ((_require)("../builtins.js"))["foldr"];
var foldr1 = ((_require)("../builtins.js"))["foldr1"];
var foldl = ((_require)("../builtins.js"))["foldl"];
var foldl1 = ((_require)("../builtins.js"))["foldl1"];
var error = ((_require)("../builtins.js"))["error"];
var jsonStringify = ((_require)("../builtins.js"))["jsonStringify"];
var iterate = ((_require)("../builtins.js"))["iterate"];
var True = ((_require)("../builtins.js"))["True"];
var False = ((_require)("../builtins.js"))["False"];
var Just = ((_require)("prelude.jg"))["Just"];
var $Just = ((_require)("prelude.jg"))["$Just"];
var Nothing = ((_require)("prelude.jg"))["Nothing"];
var $Nothing = ((_require)("prelude.jg"))["$Nothing"];
var Pair = ((_require)("prelude.jg"))["Pair"];
var $Pair = ((_require)("prelude.jg"))["$Pair"];
var Left = ((_require)("prelude.jg"))["Left"];
var $Left = ((_require)("prelude.jg"))["$Left"];
var Right = ((_require)("prelude.jg"))["Right"];
var $Right = ((_require)("prelude.jg"))["$Right"];
var maybe = ((_require)("prelude.jg"))["maybe"];
var fst = ((_require)("prelude.jg"))["fst"];
var snd = ((_require)("prelude.jg"))["snd"];
var either = ((_require)("prelude.jg"))["either"];
var splitEither = ((_require)("prelude.jg"))["splitEither"];
var not = ((_require)("prelude.jg"))["not"];
var contains2 = ((_require)("prelude.jg"))["contains2"];
var contains = ((_require)("prelude.jg"))["contains"];
var join = ((_require)("prelude.jg"))["join"];
var zipWithIndex2 = ((_require)("prelude.jg"))["zipWithIndex2"];
var zipWithIndex = ((_require)("prelude.jg"))["zipWithIndex"];
var concatMap = ((_require)("prelude.jg"))["concatMap"];
var Var = ((_require)("ast.jg"))["Var"];
var $Var = ((_require)("ast.jg"))["$Var"];
var Const = ((_require)("ast.jg"))["Const"];
var $Const = ((_require)("ast.jg"))["$Const"];
var App = ((_require)("ast.jg"))["App"];
var $App = ((_require)("ast.jg"))["$App"];
var Lam = ((_require)("ast.jg"))["Lam"];
var $Lam = ((_require)("ast.jg"))["$Lam"];
var Case = ((_require)("ast.jg"))["Case"];
var $Case = ((_require)("ast.jg"))["$Case"];
var CNum = ((_require)("ast.jg"))["CNum"];
var $CNum = ((_require)("ast.jg"))["$CNum"];
var CStr = ((_require)("ast.jg"))["CStr"];
var $CStr = ((_require)("ast.jg"))["$CStr"];
var PVar = ((_require)("ast.jg"))["PVar"];
var $PVar = ((_require)("ast.jg"))["$PVar"];
var PConst = ((_require)("ast.jg"))["PConst"];
var $PConst = ((_require)("ast.jg"))["$PConst"];
var PData = ((_require)("ast.jg"))["PData"];
var $PData = ((_require)("ast.jg"))["$PData"];
var Module = ((_require)("ast.jg"))["Module"];
var $Module = ((_require)("ast.jg"))["$Module"];
var Data = ((_require)("ast.jg"))["Data"];
var $Data = ((_require)("ast.jg"))["$Data"];
var DataCon = ((_require)("ast.jg"))["DataCon"];
var $DataCon = ((_require)("ast.jg"))["$DataCon"];
var TConst = ((_require)("ast.jg"))["TConst"];
var $TConst = ((_require)("ast.jg"))["$TConst"];
var TVar = ((_require)("ast.jg"))["TVar"];
var $TVar = ((_require)("ast.jg"))["$TVar"];
var TApp = ((_require)("ast.jg"))["TApp"];
var $TApp = ((_require)("ast.jg"))["$TApp"];
var TFun = ((_require)("ast.jg"))["TFun"];
var $TFun = ((_require)("ast.jg"))["$TFun"];
var ImportClosed = ((_require)("ast.jg"))["ImportClosed"];
var $ImportClosed = ((_require)("ast.jg"))["$ImportClosed"];
var ImportOpen = ((_require)("ast.jg"))["ImportOpen"];
var $ImportOpen = ((_require)("ast.jg"))["$ImportOpen"];
var ImportAll = ((_require)("ast.jg"))["ImportAll"];
var $ImportAll = ((_require)("ast.jg"))["$ImportAll"];
var Success = ((_require)("parsers.jg"))["Success"];
var $Success = ((_require)("parsers.jg"))["$Success"];
var Error = ((_require)("parsers.jg"))["Error"];
var $Error = ((_require)("parsers.jg"))["$Error"];
var and = ((_require)("parsers.jg"))["and"];
var apply = ((_require)("parsers.jg"))["apply"];
var precedes = ((_require)("parsers.jg"))["precedes"];
var succeeds = ((_require)("parsers.jg"))["succeeds"];
var between = ((_require)("parsers.jg"))["between"];
var or = ((_require)("parsers.jg"))["or"];
var manyIterate = ((_require)("parsers.jg"))["manyIterate"];
var many = ((_require)("parsers.jg"))["many"];
var many1 = ((_require)("parsers.jg"))["many1"];
var sepBy1 = ((_require)("parsers.jg"))["sepBy1"];
var opt = ((_require)("parsers.jg"))["opt"];
var digits = ((_require)("parsers.jg"))["digits"];
var upperCaseLetters = ((_require)("parsers.jg"))["upperCaseLetters"];
var letters = ((_require)("parsers.jg"))["letters"];
var LexerState = ((_require)("jaguarLexer.jg"))["LexerState"];
var $LexerState = ((_require)("jaguarLexer.jg"))["$LexerState"];
var WsTok = ((_require)("jaguarLexer.jg"))["WsTok"];
var $WsTok = ((_require)("jaguarLexer.jg"))["$WsTok"];
var SymTok = ((_require)("jaguarLexer.jg"))["SymTok"];
var $SymTok = ((_require)("jaguarLexer.jg"))["$SymTok"];
var NumTok = ((_require)("jaguarLexer.jg"))["NumTok"];
var $NumTok = ((_require)("jaguarLexer.jg"))["$NumTok"];
var StrTok = ((_require)("jaguarLexer.jg"))["StrTok"];
var $StrTok = ((_require)("jaguarLexer.jg"))["$StrTok"];
var OpTok = ((_require)("jaguarLexer.jg"))["OpTok"];
var $OpTok = ((_require)("jaguarLexer.jg"))["$OpTok"];
var IdTok = ((_require)("jaguarLexer.jg"))["IdTok"];
var $IdTok = ((_require)("jaguarLexer.jg"))["$IdTok"];
var ComTok = ((_require)("jaguarLexer.jg"))["ComTok"];
var $ComTok = ((_require)("jaguarLexer.jg"))["$ComTok"];
var Token = ((_require)("jaguarLexer.jg"))["Token"];
var $Token = ((_require)("jaguarLexer.jg"))["$Token"];
var mkTok = ((_require)("jaguarLexer.jg"))["mkTok"];
var concatStr = ((_require)("jaguarLexer.jg"))["concatStr"];
var runLexer = ((_require)("jaguarLexer.jg"))["runLexer"];
var parseChar = ((_require)("jaguarLexer.jg"))["parseChar"];
var anyCharP = ((_require)("jaguarLexer.jg"))["anyCharP"];
var charP = ((_require)("jaguarLexer.jg"))["charP"];
var notCharP = ((_require)("jaguarLexer.jg"))["notCharP"];
var stringCharP = ((_require)("jaguarLexer.jg"))["stringCharP"];
var stringP = ((_require)("jaguarLexer.jg"))["stringP"];
var whitespaceP = ((_require)("jaguarLexer.jg"))["whitespaceP"];
var intP = ((_require)("jaguarLexer.jg"))["intP"];
var numP = ((_require)("jaguarLexer.jg"))["numP"];
var lineCommentP = ((_require)("jaguarLexer.jg"))["lineCommentP"];
var symbolP = ((_require)("jaguarLexer.jg"))["symbolP"];
var identP = ((_require)("jaguarLexer.jg"))["identP"];
var opP = ((_require)("jaguarLexer.jg"))["opP"];
var jaguarTokenP = ((_require)("jaguarLexer.jg"))["jaguarTokenP"];
var tokenize = ((_require)("jaguarLexer.jg"))["tokenize"];
var $ParserState = function($0,$1,$2,$3){((this)["$0"])=($0);((this)["$1"])=($1);((this)["$2"])=($2);((this)["$3"])=($3)};
var ParserState = function($0){return function($1){return function($2){return function($3){return new ($ParserState)($0,$1,$2,$3)}}}};
var mkParserState = function(ts){return ((((ParserState)(ts))(0))((function(){var $pm = ((get)(0))(ts);return (((((($pm) instanceof ($Token))&&(true))&&(true))&&(true))&&(true))?((function(t,v,l,c){return c})(($pm)["$0"],($pm)["$1"],($pm)["$2"],($pm)["$3"])):((error)("pattern match fail"))})()))(((push)(0))(emptyArray))};
var filterWhitespaceAndComments = (filter)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($WsTok)))&&(true))&&(true))&&(true))?((function(v,l,c){return false})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($ComTok)))&&(true))&&(true))&&(true))?((function(v,l,c){return false})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(t){return true})($pm)):((error)("pattern match fail"))))})()});
var runParser = function(p){return function(s){return (function(){var $pm = (tokenize)(s);return (((($pm) instanceof ($Success))&&(true))&&(true))?((function(ts,s){return (p)((mkParserState)((filterWhitespaceAndComments)(ts)))})(($pm)["$0"],($pm)["$1"])):((true)?((function(e){return e})($pm)):((error)("pattern match fail")))})()}};
var parseToken = function(f){return function(s){return (function(){var $pm = s;return (((((($pm) instanceof ($ParserState))&&(true))&&(true))&&(true))&&(true))?((function(ts,p,li,ri){return (function(){var $pm = (($lt)(p))((length)(ts));return (!($pm))?((function(){return (Error)("run out of tokens")})()):(($pm)?((function(){return (function(){var $pm = ((get)(p))(ts);return (((((($pm) instanceof ($Token))&&(true))&&(true))&&(true))&&(true))?((function(t,v,l,c){return (function(){var $pm = (($lt)(c))(ri);return ($pm)?((function(){return (Error)("token not indented sufficiently")})()):((!($pm))?((function(){return (function(){var $pm = (f)(((get)(p))(ts));return (($pm) instanceof ($Nothing))?((function(){return (Error)("parser fun failed")})()):(((($pm) instanceof ($Just))&&(true))?((function(r){return (function(){var $pm = (($lt)((($add)(p))(1)))((length)(ts));return (!($pm))?((function(){return ((Success)(r))(((((ParserState)(ts))((($add)(p))(1)))(li))(ri))})()):(($pm)?((function(){return (function(){var $pm = ((get)((($add)(p))(1)))(ts);return (((((($pm) instanceof ($Token))&&(true))&&(true))&&(true))&&(true))?((function(t,v,l2,c){return (function(){var $pm = (($gt)(l2))(l);return (!($pm))?((function(){return ((Success)(r))(((((ParserState)(ts))((($add)(p))(1)))(li))(ri))})()):(($pm)?((function(){return ((Success)(r))(((((ParserState)(ts))((($add)(p))(1)))(c))(ri))})()):((error)("pattern match fail")))})()})(($pm)["$0"],($pm)["$1"],($pm)["$2"],($pm)["$3"])):((error)("pattern match fail"))})()})()):((error)("pattern match fail")))})()})(($pm)["$0"])):((error)("pattern match fail")))})()})()):((error)("pattern match fail")))})()})(($pm)["$0"],($pm)["$1"],($pm)["$2"],($pm)["$3"])):((error)("pattern match fail"))})()})()):((error)("pattern match fail")))})()})(($pm)["$0"],($pm)["$1"],($pm)["$2"],($pm)["$3"])):((error)("pattern match fail"))})()}};
var andIndent = function(a){return function(b){return function(s){return (function(){var $pm = s;return (((((($pm) instanceof ($ParserState))&&(true))&&(true))&&(true))&&(true))?((function(ts,p,li,ri){return (function(){var $pm = (a)(s);return (((($pm) instanceof ($Success))&&(true))&&((((((($pm)["$1"]) instanceof ($ParserState))&&(true))&&(true))&&(true))&&(true)))?((function(a,ts,p2,li2,ri2){return (function(){var $pm = (b)(((((ParserState)(ts))(p2))(li2))((($add)(li))(1)));return (((($pm) instanceof ($Success))&&(true))&&((((((($pm)["$1"]) instanceof ($ParserState))&&(true))&&(true))&&(true))&&(true)))?((function(b,ts,p3,li3,ri3){return ((Success)(((Pair)(a))(b)))(((((ParserState)(ts))(p3))(li3))(ri))})(($pm)["$0"],(($pm)["$1"])["$0"],(($pm)["$1"])["$1"],(($pm)["$1"])["$2"],(($pm)["$1"])["$3"])):((true)?((function(e){return e})($pm)):((error)("pattern match fail")))})()})(($pm)["$0"],(($pm)["$1"])["$0"],(($pm)["$1"])["$1"],(($pm)["$1"])["$2"],(($pm)["$1"])["$3"])):((true)?((function(e){return e})($pm)):((error)("pattern match fail")))})()})(($pm)["$0"],($pm)["$1"],($pm)["$2"],($pm)["$3"])):((error)("pattern match fail"))})()}}};
var reserved = ((push)("from"))(((push)("import"))(((push)("case"))(((push)("of"))(((push)("data"))(emptyArray)))));
var symP = function(s){return (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($SymTok)))&&(true))&&(true))&&(true))?((function(v,i,c){return (function(){var $pm = (($eq)(v))(s);return ($pm)?((function(){return (Just)(s)})()):((!($pm))?((function(){return Nothing})()):((error)("pattern match fail")))})()})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(x){return Nothing})($pm)):((error)("pattern match fail")))})()})};
var operatorP = function(s){return (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($OpTok)))&&(true))&&(true))&&(true))?((function(v,i,c){return (function(){var $pm = (($eq)(v))(s);return ($pm)?((function(){return (Just)(s)})()):((!($pm))?((function(){return Nothing})()):((error)("pattern match fail")))})()})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(x){return Nothing})($pm)):((error)("pattern match fail")))})()})};
var anyOpP = (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($OpTok)))&&(true))&&(true))&&(true))?((function(v,i,c){return (Just)(v)})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(x){return Nothing})($pm)):((error)("pattern match fail")))})()});
var reservedP = function(s){return (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($IdTok)))&&(true))&&(true))&&(true))?((function(v,i,c){return (function(){var $pm = (($eq)(v))(s);return ($pm)?((function(){return (Just)(s)})()):((!($pm))?((function(){return Nothing})()):((error)("pattern match fail")))})()})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(x){return Nothing})($pm)):((error)("pattern match fail")))})()})};
var nonReservedP = (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($IdTok)))&&(true))&&(true))&&(true))?((function(v,l,c){return (function(){var $pm = ((contains)(v))(reserved);return ($pm)?((function(){return Nothing})()):((!($pm))?((function(){return (Just)(v)})()):((error)("pattern match fail")))})()})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(x){return Nothing})($pm)):((error)("pattern match fail")))})()});
var upperCaseId = (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($IdTok)))&&(true))&&(true))&&(true))?((function(v,i,c){return (function(){var $pm = ((contains)(((get)(0))(v)))(upperCaseLetters);return ($pm)?((function(){return (Just)(v)})()):((!($pm))?((function(){return Nothing})()):((error)("pattern match fail")))})()})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(t){return Nothing})($pm)):((error)("pattern match fail")))})()});
var notUpperCaseId = (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($IdTok)))&&(true))&&(true))&&(true))?((function(v,i,c){return (function(){var $pm = ((contains)(((get)(0))(v)))(upperCaseLetters);return (!($pm))?((function(){return (function(){var $pm = ((contains)(v))(reserved);return (!($pm))?((function(){return (Just)(v)})()):(($pm)?((function(){return Nothing})()):((error)("pattern match fail")))})()})()):(($pm)?((function(){return Nothing})()):((error)("pattern match fail")))})()})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(t){return Nothing})($pm)):((error)("pattern match fail")))})()});
var parenP = function(p){return (((between)((symP)("(")))(p))((symP)(")"))};
var varP = (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($IdTok)))&&(true))&&(true))&&(true))?((function(v,l,c){return (function(){var $pm = ((contains)(v))(reserved);return ($pm)?((function(){return Nothing})()):((!($pm))?((function(){return (Just)((Var)(v))})()):((error)("pattern match fail")))})()})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(x){return Nothing})($pm)):((error)("pattern match fail")))})()});
var cnumP = (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($NumTok)))&&(true))&&(true))&&(true))?((function(v,l,c){return (Just)((Const)((CNum)((unsafeStringToInt)(v))))})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(x){return Nothing})($pm)):((error)("pattern match fail")))})()});
var cstrP = (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($StrTok)))&&(true))&&(true))&&(true))?((function(v,l,c){return (Just)((Const)((CStr)(v)))})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(x){return Nothing})($pm)):((error)("pattern match fail")))})()});
var constP = ((or)(cstrP))(cnumP);
var simpleExprP = function(s){return (((or)(varP))(((or)(constP))((parenP)(exprP))))(s)};
var appP = function(s){return (((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(f,as){return (((foldl)(function(f){return function(a){return ((App)(f))(a)}}))(f))(as)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((andIndent)(((or)(varP))((parenP)(exprP))))((many)(simpleExprP))))(s)};
var lamP = function(s){return (((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&((((($pm)["$1"]) instanceof ($Pair))&&(true))&&(true)))?((function(_,ps,a){return (((foldr)(function(a){return function(p){return ((Lam)(p))(a)}}))(a))(ps)})(($pm)["$0"],(($pm)["$1"])["$0"],(($pm)["$1"])["$1"])):((error)("pattern match fail"))})()}))(((andIndent)((symP)("\\")))(((and)((many1)(notUpperCaseId)))(((precedes)((operatorP)("->")))(exprP)))))(s)};
var pvarP = ((apply)(PVar))(notUpperCaseId);
var pcnumP = (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($NumTok)))&&(true))&&(true))&&(true))?((function(v,l,c){return (Just)((PConst)((CNum)((unsafeStringToInt)(v))))})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(x){return Nothing})($pm)):((error)("pattern match fail")))})()});
var pcstrP = (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($StrTok)))&&(true))&&(true))&&(true))?((function(v,l,c){return (Just)((PConst)((CStr)(v)))})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(x){return Nothing})($pm)):((error)("pattern match fail")))})()});
var strP = (parseToken)(function(t){return (function(){var $pm = t;return (((((($pm) instanceof ($Token))&&((($pm)["$0"]) instanceof ($StrTok)))&&(true))&&(true))&&(true))?((function(v,l,c){return (Just)(v)})(($pm)["$1"],($pm)["$2"],($pm)["$3"])):((true)?((function(x){return Nothing})($pm)):((error)("pattern match fail")))})()});
var pconstP = ((or)(pcnumP))(pcstrP);
var pdataP = function(s){return (((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(n,ps){return ((PData)(n))(ps)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((andIndent)(upperCaseId))((many)(((or)(pvarP))(((or)(pconstP))((parenP)(patP)))))))(s)};
var patP = ((or)(pvarP))(((or)(pconstP))(pdataP));
var ofP = function(s){return (((andIndent)(patP))(((precedes)((operatorP)("->")))(exprP)))(s)};
var caseP = ((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&((((($pm)["$1"]) instanceof ($Pair))&&(true))&&(true)))?((function(_,e,ps){return ((Case)(e))(ps)})(($pm)["$0"],(($pm)["$1"])["$0"],(($pm)["$1"])["$1"])):((error)("pattern match fail"))})()}))(((andIndent)((reservedP)("case")))(((and)(simpleExprP))(((precedes)((reservedP)("of")))((many1)(ofP)))));
var primaryExprP = function(s){return (((or)(appP))(((or)(constP))(((or)(lamP))(caseP))))(s)};
var exprP = ((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(e,oes){return (((foldl)(function(a){return function(ob){return (function(){var $pm = ob;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(op,b){return ((App)(((App)((Var)(op)))(a)))(b)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}}))(e))(oes)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((andIndent)(primaryExprP))((many)(((and)(anyOpP))(primaryExprP))));
var tconstP = ((apply)(TConst))(upperCaseId);
var tvarP = ((apply)(TVar))(notUpperCaseId);
var simpleTypeP = function(s){return (((or)(tconstP))(((or)(tvarP))((parenP)(typeP))))(s)};
var tappP = ((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(t,ts){return (((foldl)(function(a){return function(b){return ((TApp)(a))(b)}}))(t))(ts)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((andIndent)(simpleTypeP))((many)(simpleTypeP)));
var tfunP = ((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(t,ts){return ((foldr1)(function(b){return function(a){return ((TFun)(a))(b)}}))(((enqueue)(t))(ts))})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((andIndent)(tappP))((many)(((precedes)((operatorP)("->")))(tappP))));
var typeP = tfunP;
var dataConP = ((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(n,ts){return ((DataCon)(n))(ts)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((andIndent)(upperCaseId))((many)(simpleTypeP)));
var dataP = ((apply)(function(r){return (function(){var $pm = r;return (((($pm) instanceof ($Pair))&&(true))&&((((($pm)["$1"]) instanceof ($Pair))&&(true))&&(((((($pm)["$1"])["$1"]) instanceof ($Pair))&&(true))&&(true))))?((function(_,n,ps,cs){return (((Data)(n))(ps))(cs)})(($pm)["$0"],(($pm)["$1"])["$0"],((($pm)["$1"])["$1"])["$0"],((($pm)["$1"])["$1"])["$1"])):((error)("pattern match fail"))})()}))(((andIndent)((reservedP)("data")))(((and)(upperCaseId))(((and)((many)(notUpperCaseId)))(((precedes)((operatorP)("=")))(((sepBy1)(dataConP))((operatorP)("|")))))));
var defP = ((andIndent)(notUpperCaseId))(((precedes)((operatorP)("=")))(exprP));
var importClosedP = ((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(n,f){return ((ImportClosed)(f))(n)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((and)(nonReservedP))(((precedes)((reservedP)("from")))(strP)));
var importOpenP = ((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(ns,f){return ((ImportOpen)(f))(ns)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((and)((((between)((symP)("{")))(((sepBy1)(nonReservedP))((symP)(","))))((symP)("}"))))(((precedes)((reservedP)("from")))(strP)));
var importAllP = ((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(n,f){return (ImportAll)(f)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((and)((operatorP)("*")))(((precedes)((reservedP)("from")))(strP)));
var importP = ((apply)(snd))(((andIndent)((reservedP)("import")))(((or)(importClosedP))(((or)(importOpenP))(importAllP))));
var moduleP = ((apply)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(is,es){return (function(){var $pm = (splitEither)(es);return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(dts,dfs){return (((Module)(is))(dts))(dfs)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))(((and)((many)(importP)))((many1)(((or)(((apply)(Left))(dataP)))(((apply)(Right))(defP)))));
var parseModule = (runParser)(moduleP);
var parseImports = (runParser)((many)(importP));
var parseExpr = (runParser)(exprP);
var exports = {ParserState:ParserState,$ParserState:$ParserState,mkParserState:mkParserState,filterWhitespaceAndComments:filterWhitespaceAndComments,runParser:runParser,parseToken:parseToken,andIndent:andIndent,reserved:reserved,symP:symP,operatorP:operatorP,anyOpP:anyOpP,reservedP:reservedP,nonReservedP:nonReservedP,upperCaseId:upperCaseId,notUpperCaseId:notUpperCaseId,parenP:parenP,varP:varP,cnumP:cnumP,cstrP:cstrP,constP:constP,simpleExprP:simpleExprP,appP:appP,lamP:lamP,pvarP:pvarP,pcnumP:pcnumP,pcstrP:pcstrP,strP:strP,pconstP:pconstP,pdataP:pdataP,patP:patP,ofP:ofP,caseP:caseP,primaryExprP:primaryExprP,exprP:exprP,tconstP:tconstP,tvarP:tvarP,simpleTypeP:simpleTypeP,tappP:tappP,tfunP:tfunP,typeP:typeP,dataConP:dataConP,dataP:dataP,defP:defP,importClosedP:importClosedP,importOpenP:importOpenP,importAllP:importAllP,importP:importP,moduleP:moduleP,parseModule:parseModule,parseImports:parseImports,parseExpr:parseExpr}
return exports;})();
cache["codeGenerator.jg"] = (function() {var $add = ((_require)("../builtins.js"))["$add"];
var $del = ((_require)("../builtins.js"))["$del"];
var $mul = ((_require)("../builtins.js"))["$mul"];
var $lt = ((_require)("../builtins.js"))["$lt"];
var $gt = ((_require)("../builtins.js"))["$gt"];
var $eq = ((_require)("../builtins.js"))["$eq"];
var $neq = ((_require)("../builtins.js"))["$neq"];
var $and = ((_require)("../builtins.js"))["$and"];
var $or = ((_require)("../builtins.js"))["$or"];
var $concat = ((_require)("../builtins.js"))["$concat"];
var empty = ((_require)("../builtins.js"))["empty"];
var get = ((_require)("../builtins.js"))["get"];
var del = ((_require)("../builtins.js"))["del"];
var set = ((_require)("../builtins.js"))["set"];
var unsafeStringToInt = ((_require)("../builtins.js"))["unsafeStringToInt"];
var match = ((_require)("../builtins.js"))["match"];
var drop = ((_require)("../builtins.js"))["drop"];
var length = ((_require)("../builtins.js"))["length"];
var emptyArray = ((_require)("../builtins.js"))["emptyArray"];
var push = ((_require)("../builtins.js"))["push"];
var enqueue = ((_require)("../builtins.js"))["enqueue"];
var intToString = ((_require)("../builtins.js"))["intToString"];
var intercalate = ((_require)("../builtins.js"))["intercalate"];
var slice = ((_require)("../builtins.js"))["slice"];
var concat = ((_require)("../builtins.js"))["concat"];
var map = ((_require)("../builtins.js"))["map"];
var filter = ((_require)("../builtins.js"))["filter"];
var foldr = ((_require)("../builtins.js"))["foldr"];
var foldr1 = ((_require)("../builtins.js"))["foldr1"];
var foldl = ((_require)("../builtins.js"))["foldl"];
var foldl1 = ((_require)("../builtins.js"))["foldl1"];
var error = ((_require)("../builtins.js"))["error"];
var jsonStringify = ((_require)("../builtins.js"))["jsonStringify"];
var iterate = ((_require)("../builtins.js"))["iterate"];
var True = ((_require)("../builtins.js"))["True"];
var False = ((_require)("../builtins.js"))["False"];
var Just = ((_require)("prelude.jg"))["Just"];
var $Just = ((_require)("prelude.jg"))["$Just"];
var Nothing = ((_require)("prelude.jg"))["Nothing"];
var $Nothing = ((_require)("prelude.jg"))["$Nothing"];
var Pair = ((_require)("prelude.jg"))["Pair"];
var $Pair = ((_require)("prelude.jg"))["$Pair"];
var Left = ((_require)("prelude.jg"))["Left"];
var $Left = ((_require)("prelude.jg"))["$Left"];
var Right = ((_require)("prelude.jg"))["Right"];
var $Right = ((_require)("prelude.jg"))["$Right"];
var maybe = ((_require)("prelude.jg"))["maybe"];
var fst = ((_require)("prelude.jg"))["fst"];
var snd = ((_require)("prelude.jg"))["snd"];
var either = ((_require)("prelude.jg"))["either"];
var splitEither = ((_require)("prelude.jg"))["splitEither"];
var not = ((_require)("prelude.jg"))["not"];
var contains2 = ((_require)("prelude.jg"))["contains2"];
var contains = ((_require)("prelude.jg"))["contains"];
var join = ((_require)("prelude.jg"))["join"];
var zipWithIndex2 = ((_require)("prelude.jg"))["zipWithIndex2"];
var zipWithIndex = ((_require)("prelude.jg"))["zipWithIndex"];
var concatMap = ((_require)("prelude.jg"))["concatMap"];
var Var = ((_require)("ast.jg"))["Var"];
var $Var = ((_require)("ast.jg"))["$Var"];
var Const = ((_require)("ast.jg"))["Const"];
var $Const = ((_require)("ast.jg"))["$Const"];
var App = ((_require)("ast.jg"))["App"];
var $App = ((_require)("ast.jg"))["$App"];
var Lam = ((_require)("ast.jg"))["Lam"];
var $Lam = ((_require)("ast.jg"))["$Lam"];
var Case = ((_require)("ast.jg"))["Case"];
var $Case = ((_require)("ast.jg"))["$Case"];
var CNum = ((_require)("ast.jg"))["CNum"];
var $CNum = ((_require)("ast.jg"))["$CNum"];
var CStr = ((_require)("ast.jg"))["CStr"];
var $CStr = ((_require)("ast.jg"))["$CStr"];
var PVar = ((_require)("ast.jg"))["PVar"];
var $PVar = ((_require)("ast.jg"))["$PVar"];
var PConst = ((_require)("ast.jg"))["PConst"];
var $PConst = ((_require)("ast.jg"))["$PConst"];
var PData = ((_require)("ast.jg"))["PData"];
var $PData = ((_require)("ast.jg"))["$PData"];
var Module = ((_require)("ast.jg"))["Module"];
var $Module = ((_require)("ast.jg"))["$Module"];
var Data = ((_require)("ast.jg"))["Data"];
var $Data = ((_require)("ast.jg"))["$Data"];
var DataCon = ((_require)("ast.jg"))["DataCon"];
var $DataCon = ((_require)("ast.jg"))["$DataCon"];
var TConst = ((_require)("ast.jg"))["TConst"];
var $TConst = ((_require)("ast.jg"))["$TConst"];
var TVar = ((_require)("ast.jg"))["TVar"];
var $TVar = ((_require)("ast.jg"))["$TVar"];
var TApp = ((_require)("ast.jg"))["TApp"];
var $TApp = ((_require)("ast.jg"))["$TApp"];
var TFun = ((_require)("ast.jg"))["TFun"];
var $TFun = ((_require)("ast.jg"))["$TFun"];
var ImportClosed = ((_require)("ast.jg"))["ImportClosed"];
var $ImportClosed = ((_require)("ast.jg"))["$ImportClosed"];
var ImportOpen = ((_require)("ast.jg"))["ImportOpen"];
var $ImportOpen = ((_require)("ast.jg"))["$ImportOpen"];
var ImportAll = ((_require)("ast.jg"))["ImportAll"];
var $ImportAll = ((_require)("ast.jg"))["$ImportAll"];
var Success = ((_require)("parsers.jg"))["Success"];
var $Success = ((_require)("parsers.jg"))["$Success"];
var Error = ((_require)("parsers.jg"))["Error"];
var $Error = ((_require)("parsers.jg"))["$Error"];
var and = ((_require)("parsers.jg"))["and"];
var apply = ((_require)("parsers.jg"))["apply"];
var precedes = ((_require)("parsers.jg"))["precedes"];
var succeeds = ((_require)("parsers.jg"))["succeeds"];
var between = ((_require)("parsers.jg"))["between"];
var or = ((_require)("parsers.jg"))["or"];
var manyIterate = ((_require)("parsers.jg"))["manyIterate"];
var many = ((_require)("parsers.jg"))["many"];
var many1 = ((_require)("parsers.jg"))["many1"];
var sepBy1 = ((_require)("parsers.jg"))["sepBy1"];
var opt = ((_require)("parsers.jg"))["opt"];
var digits = ((_require)("parsers.jg"))["digits"];
var upperCaseLetters = ((_require)("parsers.jg"))["upperCaseLetters"];
var letters = ((_require)("parsers.jg"))["letters"];
var parseExpr = ((_require)("jaguarParser.jg"))["parseExpr"];
var parseModule = ((_require)("jaguarParser.jg"))["parseModule"];
var $JSRef = function($0){((this)["$0"])=($0)};
var JSRef = function($0){return new ($JSRef)($0)};
var $JSIndex = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var JSIndex = function($0){return function($1){return new ($JSIndex)($0,$1)}};
var $JSUnOp = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var JSUnOp = function($0){return function($1){return new ($JSUnOp)($0,$1)}};
var $JSBinOp = function($0,$1,$2){((this)["$0"])=($0);((this)["$1"])=($1);((this)["$2"])=($2)};
var JSBinOp = function($0){return function($1){return function($2){return new ($JSBinOp)($0,$1,$2)}}};
var $JSCall = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var JSCall = function($0){return function($1){return new ($JSCall)($0,$1)}};
var $JSFun = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var JSFun = function($0){return function($1){return new ($JSFun)($0,$1)}};
var $JSTernary = function($0,$1,$2){((this)["$0"])=($0);((this)["$1"])=($1);((this)["$2"])=($2)};
var JSTernary = function($0){return function($1){return function($2){return new ($JSTernary)($0,$1,$2)}}};
var $JSNum = function($0){((this)["$0"])=($0)};
var JSNum = function($0){return new ($JSNum)($0)};
var $JSString = function($0){((this)["$0"])=($0)};
var JSString = function($0){return new ($JSString)($0)};
var $JSBool = function($0){((this)["$0"])=($0)};
var JSBool = function($0){return new ($JSBool)($0)};
var $JSObject = function($0){((this)["$0"])=($0)};
var JSObject = function($0){return new ($JSObject)($0)};
var $JSNull = function(){};
var JSNull = new ($JSNull)();
var $JSUndefined = function(){};
var JSUndefined = new ($JSUndefined)();
var $JSInstanceOf = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var JSInstanceOf = function($0){return function($1){return new ($JSInstanceOf)($0,$1)}};
var $JSNew = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var JSNew = function($0){return function($1){return new ($JSNew)($0,$1)}};
var $JSExpr = function($0){((this)["$0"])=($0)};
var JSExpr = function($0){return new ($JSExpr)($0)};
var $JSReturn = function($0){((this)["$0"])=($0)};
var JSReturn = function($0){return new ($JSReturn)($0)};
var $JSVar = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var JSVar = function($0){return function($1){return new ($JSVar)($0,$1)}};
var $JSSwitch = function($0,$1){((this)["$0"])=($0);((this)["$1"])=($1)};
var JSSwitch = function($0){return function($1){return new ($JSSwitch)($0,$1)}};
var $JSBreak = function(){};
var JSBreak = new ($JSBreak)();
var jsExprToString = function(e){return (function(){var $pm = e;return (($pm) instanceof ($JSNull))?((function(){return "null"})()):((($pm) instanceof ($JSUndefined))?((function(){return "undefined"})()):(((($pm) instanceof ($JSBool))&&(($pm)["$0"]))?((function(){return "true"})()):(((($pm) instanceof ($JSBool))&&(!(($pm)["$0"])))?((function(){return "false"})()):(((($pm) instanceof ($JSNum))&&(true))?((function(n){return (jsonStringify)(n)})(($pm)["$0"])):(((($pm) instanceof ($JSString))&&(true))?((function(s){return (jsonStringify)(s)})(($pm)["$0"])):(((($pm) instanceof ($JSRef))&&(("+")==(($pm)["$0"])))?((function(){return "$add"})()):(((($pm) instanceof ($JSRef))&&(("-")==(($pm)["$0"])))?((function(){return "$del"})()):(((($pm) instanceof ($JSRef))&&(("*")==(($pm)["$0"])))?((function(){return "$mul"})()):(((($pm) instanceof ($JSRef))&&(("<")==(($pm)["$0"])))?((function(){return "$lt"})()):(((($pm) instanceof ($JSRef))&&((">")==(($pm)["$0"])))?((function(){return "$gt"})()):(((($pm) instanceof ($JSRef))&&(("==")==(($pm)["$0"])))?((function(){return "$eq"})()):(((($pm) instanceof ($JSRef))&&(("/=")==(($pm)["$0"])))?((function(){return "$neq"})()):(((($pm) instanceof ($JSRef))&&(("&&")==(($pm)["$0"])))?((function(){return "$and"})()):(((($pm) instanceof ($JSRef))&&(("||")==(($pm)["$0"])))?((function(){return "$or"})()):(((($pm) instanceof ($JSRef))&&(("++")==(($pm)["$0"])))?((function(){return "$concat"})()):(((($pm) instanceof ($JSRef))&&(true))?((function(v){return v})(($pm)["$0"])):((((($pm) instanceof ($JSIndex))&&(true))&&(true))?((function(xs,i){return (($concat)((($concat)((($concat)((paren)((jsExprToString)(xs))))("[")))((jsExprToString)(i))))("]")})(($pm)["$0"],($pm)["$1"])):((((($pm) instanceof ($JSUnOp))&&(true))&&(true))?((function(op,e){return (($concat)(op))((paren)((jsExprToString)(e)))})(($pm)["$0"],($pm)["$1"])):(((((($pm) instanceof ($JSBinOp))&&(true))&&(true))&&(true))?((function(op,a,b){return (($concat)((($concat)((paren)((jsExprToString)(a))))(op)))((paren)((jsExprToString)(b)))})(($pm)["$0"],($pm)["$1"],($pm)["$2"])):((((($pm) instanceof ($JSCall))&&(true))&&(true))?((function(f,xs){return (($concat)((paren)((jsExprToString)(f))))((paren)(((intercalate)(","))(((map)(jsExprToString))(xs))))})(($pm)["$0"],($pm)["$1"])):((((($pm) instanceof ($JSNew))&&(true))&&(true))?((function(c,xs){return (($concat)((($concat)("new "))((paren)((jsExprToString)(c)))))((paren)(((intercalate)(","))(((map)(jsExprToString))(xs))))})(($pm)["$0"],($pm)["$1"])):((((($pm) instanceof ($JSFun))&&(true))&&(true))?((function(ps,bs){return (($concat)((($concat)((($concat)((($concat)("function("))(((intercalate)(","))(ps))))("){")))(((intercalate)(";"))(((map)(jsStmtToString))(bs)))))("}")})(($pm)["$0"],($pm)["$1"])):(((((($pm) instanceof ($JSTernary))&&(true))&&(true))&&(true))?((function(b,x,y){return (($concat)((($concat)((($concat)((($concat)((paren)((jsExprToString)(b))))("?")))((paren)((jsExprToString)(x)))))(":")))((paren)((jsExprToString)(y)))})(($pm)["$0"],($pm)["$1"],($pm)["$2"])):(((($pm) instanceof ($JSObject))&&(true))?((function(kvs){return (($concat)((($concat)("{"))(((intercalate)(","))(((map)(keyValueToString))(kvs)))))("}")})(($pm)["$0"])):((((($pm) instanceof ($JSInstanceOf))&&(true))&&(true))?((function(x,c){return (($concat)((($concat)((paren)((jsExprToString)(x))))(" instanceof ")))((paren)((jsExprToString)(c)))})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail")))))))))))))))))))))))))))})()};
var keyValueToString = function(kv){return (function(){var $pm = kv;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(k,v){return (($concat)((($concat)(k))(":")))((jsExprToString)(v))})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()};
var jsStmtToString = function(s){return (function(){var $pm = s;return ((($pm) instanceof ($JSExpr))&&(true))?((function(e){return (jsExprToString)(e)})(($pm)["$0"])):(((($pm) instanceof ($JSReturn))&&(true))?((function(e){return (($concat)("return "))((jsExprToString)(e))})(($pm)["$0"])):((((($pm) instanceof ($JSVar))&&(true))&&(true))?((function(v,e){return (($concat)((($concat)((($concat)("var "))(v)))(" = ")))((jsExprToString)(e))})(($pm)["$0"],($pm)["$1"])):((($pm) instanceof ($JSBreak))?((function(){return "break"})()):((((($pm) instanceof ($JSSwitch))&&(true))&&(true))?((function(e,cs){return (($concat)((($concat)((($concat)((($concat)("switch"))((paren)((jsExprToString)(e)))))("{")))(((intercalate)(";\n"))(((map)(caseToString))(cs)))))("}")})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))))))})()};
var caseToString = function(c){return (function(){var $pm = c;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(m,ss){return (($concat)((($concat)((($concat)("case "))((paren)((jsExprToString)(m)))))(":\n  ")))(((intercalate)(";"))(((map)(jsStmtToString))(ss)))})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()};
var paren = function(s){return (($concat)((($concat)("("))(s)))(")")};
var jaguarExprToJsExpr = function(e){return (function(){var $pm = e;return ((($pm) instanceof ($Var))&&(("True")==(($pm)["$0"])))?((function(){return (JSBool)(true)})()):(((($pm) instanceof ($Var))&&(("False")==(($pm)["$0"])))?((function(){return (JSBool)(false)})()):(((($pm) instanceof ($Var))&&(true))?((function(v){return (JSRef)(v)})(($pm)["$0"])):(((($pm) instanceof ($Const))&&(((($pm)["$0"]) instanceof ($CNum))&&(true)))?((function(n){return (JSNum)(n)})((($pm)["$0"])["$0"])):(((($pm) instanceof ($Const))&&(((($pm)["$0"]) instanceof ($CStr))&&(true)))?((function(s){return (JSString)(s)})((($pm)["$0"])["$0"])):((((($pm) instanceof ($App))&&(true))&&(true))?((function(f,a){return ((JSCall)((jaguarExprToJsExpr)(f)))((arr1)((jaguarExprToJsExpr)(a)))})(($pm)["$0"],($pm)["$1"])):((((($pm) instanceof ($Lam))&&(true))&&(true))?((function(p,e){return ((JSFun)((arr1)(p)))((arr1)((JSReturn)((jaguarExprToJsExpr)(e))))})(($pm)["$0"],($pm)["$1"])):((((($pm) instanceof ($Case))&&(true))&&(true))?((function(e,ps){return ((JSCall)(((JSFun)(emptyArray))(((arr2)(((JSVar)("$pm"))((jaguarExprToJsExpr)(e))))((JSReturn)((((foldr)(assemblePatternMatch))(((JSCall)((JSRef)("error")))((arr1)((JSString)("pattern match fail")))))(ps))))))(emptyArray)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail")))))))))})()};
var assemblePatternMatch = function(alt){return function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(pat,e){return (function(){var $pm = ((processPattern)((JSRef)("$pm")))(pat);return (((($pm) instanceof ($Pair))&&(true))&&((((($pm)["$1"]) instanceof ($Pair))&&(true))&&(true)))?((function(f,ns,vs){return (((JSTernary)(f))(((JSCall)(((JSFun)(ns))((arr1)((JSReturn)((jaguarExprToJsExpr)(e))))))(vs)))(alt)})(($pm)["$0"],(($pm)["$1"])["$0"],(($pm)["$1"])["$1"])):((error)("pattern match fail"))})()})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}};
var processPattern = function(pm){return function(p){return (function(){var $pm = p;return ((($pm) instanceof ($PVar))&&(true))?((function(v){return ((Pair)((JSBool)(true)))(((Pair)((arr1)(v)))((arr1)(pm)))})(($pm)["$0"])):(((($pm) instanceof ($PConst))&&(((($pm)["$0"]) instanceof ($CNum))&&(true)))?((function(n){return ((Pair)((((JSBinOp)("=="))((JSNum)(n)))(pm)))(((Pair)(emptyArray))(emptyArray))})((($pm)["$0"])["$0"])):(((($pm) instanceof ($PConst))&&(((($pm)["$0"]) instanceof ($CStr))&&(true)))?((function(s){return ((Pair)((((JSBinOp)("=="))((JSString)(s)))(pm)))(((Pair)(emptyArray))(emptyArray))})((($pm)["$0"])["$0"])):((((($pm) instanceof ($PData))&&(("True")==(($pm)["$0"])))&&(true))?((function(ps){return ((Pair)(pm))(((Pair)(emptyArray))(emptyArray))})(($pm)["$1"])):((((($pm) instanceof ($PData))&&(("False")==(($pm)["$0"])))&&(true))?((function(ps){return ((Pair)(((JSUnOp)("!"))(pm)))(((Pair)(emptyArray))(emptyArray))})(($pm)["$1"])):((((($pm) instanceof ($PData))&&(true))&&(true))?((function(t,ps){return (((foldl)(function(a){return function(b){return (function(){var $pm = a;return (((($pm) instanceof ($Pair))&&(true))&&((((($pm)["$1"]) instanceof ($Pair))&&(true))&&(true)))?((function(fa,na,va){return (function(){var $pm = b;return (((($pm) instanceof ($Pair))&&(true))&&((((($pm)["$1"]) instanceof ($Pair))&&(true))&&(true)))?((function(fb,nb,vb){return ((Pair)((((JSBinOp)("&&"))(fa))(fb)))(((Pair)(((concat)(na))(nb)))(((concat)(va))(vb)))})(($pm)["$0"],(($pm)["$1"])["$0"],(($pm)["$1"])["$1"])):((error)("pattern match fail"))})()})(($pm)["$0"],(($pm)["$1"])["$0"],(($pm)["$1"])["$1"])):((error)("pattern match fail"))})()}}))(((Pair)(((JSInstanceOf)(pm))((JSRef)((($concat)("$"))(t)))))(((Pair)(emptyArray))(emptyArray))))(((map)(function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(n,pat){return ((processPattern)(((JSIndex)(pm))((JSString)((($concat)("$"))((intToString)(n))))))(pat)})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()}))((zipWithIndex)(ps)))})(($pm)["$0"],($pm)["$1"])):((true)?((function(z){return (error)("failure to match pattern during processing")})($pm)):((error)("pattern match fail"))))))))})()}};
var arr1 = function(x){return ((push)(x))(emptyArray)};
var arr2 = function(x){return function(y){return ((push)(y))((arr1)(x))}};
var compileExpr = function(s){return (function(){var $pm = (parseExpr)(s);return (((($pm) instanceof ($Success))&&(true))&&(true))?((function(e,ps){return (jsExprToString)((jaguarExprToJsExpr)(e))})(($pm)["$0"],($pm)["$1"])):((true)?((function(e){return (error)(e)})($pm)):((error)("pattern match fail")))})()};
var defToJs = function(p){return (function(){var $pm = p;return (((($pm) instanceof ($Pair))&&(true))&&(true))?((function(n,e){return ((JSVar)(n))((jaguarExprToJsExpr)(e))})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()};
var requireExpr = function(f){return ((JSCall)((JSRef)("_require")))((arr1)((JSString)(f)))};
var buildImports = function(f){return function(ns){return ((map)(function(n){return ((JSVar)(n))(((JSIndex)((requireExpr)(f)))((JSString)(n)))}))(ns)}};
var importToJs = function(importSymbols){return function(i){return (function(){var $pm = i;return (((($pm) instanceof ($ImportClosed))&&(true))&&(true))?((function(f,n){return (arr1)(((JSVar)(n))((requireExpr)(f)))})(($pm)["$0"],($pm)["$1"])):((((($pm) instanceof ($ImportOpen))&&(true))&&(true))?((function(f,ns){return ((buildImports)(f))(ns)})(($pm)["$0"],($pm)["$1"])):(((($pm) instanceof ($ImportAll))&&(true))?((function(f){return ((buildImports)(f))(((get)(f))(importSymbols))})(($pm)["$0"])):((error)("pattern match fail"))))})()}};
var dataConFieldIds = function(ts){return ((map)(function(p){return (($concat)("$"))((intToString)((fst)(p)))}))((zipWithIndex)(ts))};
var dataConToJs = function(dc){return (function(){var $pm = dc;return (((($pm) instanceof ($DataCon))&&(true))&&(true))?((function(n,ts){return ((arr2)(((JSVar)((($concat)("$"))(n)))(((JSFun)((dataConFieldIds)(ts)))(((map)(function(f){return (JSExpr)((((JSBinOp)("="))(((JSIndex)((JSRef)("this")))((JSString)(f))))((JSRef)(f)))}))((dataConFieldIds)(ts))))))(((JSVar)(n))((((foldr)(function(b){return function(f){return ((JSFun)((arr1)(f)))((arr1)((JSReturn)(b)))}}))(((JSNew)((JSRef)((($concat)("$"))(n))))(((map)(JSRef))((dataConFieldIds)(ts)))))((dataConFieldIds)(ts))))})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()};
var dataToJs = function(d){return (function(){var $pm = d;return ((((($pm) instanceof ($Data))&&(true))&&(true))&&(true))?((function(n,ps,cs){return ((concatMap)(dataConToJs))(cs)})(($pm)["$0"],($pm)["$1"],($pm)["$2"])):((error)("pattern match fail"))})()};
var dataConName = function(dc){return (function(){var $pm = dc;return (((($pm) instanceof ($DataCon))&&(true))&&(true))?((function(n,ts){return ((arr2)(n))((($concat)("$"))(n))})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))})()};
var dataConNames = function(d){return (function(){var $pm = d;return ((((($pm) instanceof ($Data))&&(true))&&(true))&&(true))?((function(n,ps,cs){return ((concatMap)(dataConName))(cs)})(($pm)["$0"],($pm)["$1"],($pm)["$2"])):((error)("pattern match fail"))})()};
var exportObject = function(ds){return function(vs){return (JSObject)(((map)(function(n){return ((Pair)(n))((JSRef)(n))}))(((concat)(((concatMap)(dataConNames))(ds)))(((map)(fst))(vs))))}};
var moduleToJs = function(importSymbols){return function(m){return (function(){var $pm = m;return ((((($pm) instanceof ($Module))&&(true))&&(true))&&(true))?((function(is,ds,vs){return ((push)(((JSVar)("exports"))(((exportObject)(ds))(vs))))(((concat)(((concatMap)((importToJs)(importSymbols)))(((enqueue)((ImportAll)("../builtins.js")))(is))))(((concat)(((concatMap)(dataToJs))(ds)))(((map)(defToJs))(vs))))})(($pm)["$0"],($pm)["$1"],($pm)["$2"])):((error)("pattern match fail"))})()}};
var transpileModule = function(importSymbols){return function(s){return (function(){var $pm = (parseModule)(s);return (((($pm) instanceof ($Success))&&(true))&&(true))?((function(m,ps){return ((join)(((map)(jsStmtToString))(((moduleToJs)(importSymbols))(m))))(";\n")})(($pm)["$0"],($pm)["$1"])):((true)?((function(e){return (error)(e)})($pm)):((error)("pattern match fail")))})()}};
var importFileName = function(i){return (function(){var $pm = i;return ((($pm) instanceof ($ImportAll))&&(true))?((function(f){return f})(($pm)["$0"])):((((($pm) instanceof ($ImportOpen))&&(true))&&(true))?((function(f,ns){return f})(($pm)["$0"],($pm)["$1"])):((((($pm) instanceof ($ImportClosed))&&(true))&&(true))?((function(f,n){return f})(($pm)["$0"],($pm)["$1"])):((error)("pattern match fail"))))})()};
var findImports = function(s){return (function(){var $pm = (parseModule)(s);return (((($pm) instanceof ($Success))&&(((((($pm)["$0"]) instanceof ($Module))&&(true))&&(true))&&(true)))&&(true))?((function(is,ds,vs,ps){return ((push)("../builtins.js"))(((map)(importFileName))(is))})((($pm)["$0"])["$0"],(($pm)["$0"])["$1"],(($pm)["$0"])["$2"],($pm)["$1"])):((true)?((function(e){return (error)(e)})($pm)):((error)("pattern match fail")))})()};
var exports = {JSRef:JSRef,$JSRef:$JSRef,JSIndex:JSIndex,$JSIndex:$JSIndex,JSUnOp:JSUnOp,$JSUnOp:$JSUnOp,JSBinOp:JSBinOp,$JSBinOp:$JSBinOp,JSCall:JSCall,$JSCall:$JSCall,JSFun:JSFun,$JSFun:$JSFun,JSTernary:JSTernary,$JSTernary:$JSTernary,JSNum:JSNum,$JSNum:$JSNum,JSString:JSString,$JSString:$JSString,JSBool:JSBool,$JSBool:$JSBool,JSObject:JSObject,$JSObject:$JSObject,JSNull:JSNull,$JSNull:$JSNull,JSUndefined:JSUndefined,$JSUndefined:$JSUndefined,JSInstanceOf:JSInstanceOf,$JSInstanceOf:$JSInstanceOf,JSNew:JSNew,$JSNew:$JSNew,JSExpr:JSExpr,$JSExpr:$JSExpr,JSReturn:JSReturn,$JSReturn:$JSReturn,JSVar:JSVar,$JSVar:$JSVar,JSSwitch:JSSwitch,$JSSwitch:$JSSwitch,JSBreak:JSBreak,$JSBreak:$JSBreak,jsExprToString:jsExprToString,keyValueToString:keyValueToString,jsStmtToString:jsStmtToString,caseToString:caseToString,paren:paren,jaguarExprToJsExpr:jaguarExprToJsExpr,assemblePatternMatch:assemblePatternMatch,processPattern:processPattern,arr1:arr1,arr2:arr2,compileExpr:compileExpr,defToJs:defToJs,requireExpr:requireExpr,buildImports:buildImports,importToJs:importToJs,dataConFieldIds:dataConFieldIds,dataConToJs:dataConToJs,dataToJs:dataToJs,dataConName:dataConName,dataConNames:dataConNames,exportObject:exportObject,moduleToJs:moduleToJs,transpileModule:transpileModule,importFileName:importFileName,findImports:findImports}
return exports;})();
module.exports = cache["codeGenerator.jg"]