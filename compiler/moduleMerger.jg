import * from '//compiler/prelude.jg'
import * from '//compiler/ast.jg'
import {newIdent, rewriteExpr} from '//compiler/uniquifier.jg'

mergeModules ms = foldl1 mergeInto ms

mergeInto a b = case a of
  Module ann _ is ds _ _ bs -> case b of
    Module _ fn is2 ds2 _ _ bs2 ->
      Module ann fn is (concat ds ds2) emptyArray emptyArray (concat bs (concat (concatMap importAsBindings is2) bs2))

importAsBindings i = case i of
  ImportOpen _ './builtins.js' _ -> emptyArray
  ImportOpen _ _ ns -> map (\p -> case p of Pair nf nt -> Pair nt (Var emptyAnn nf)) (filter (\p -> fst p /= snd p) ns)
