{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fix",
				"fixIds"
			],
			[
				"impo",
				"importAliases"
			],
			[
				"fixIdsIn",
				"fixIdsInPat"
			],
			[
				"with",
				"withIds"
			],
			[
				"importedI",
				"importedInsNames"
			],
			[
				"print",
				"printBinding"
			],
			[
				"xs",
				"xs_186"
			],
			[
				"x_",
				"x_185"
			],
			[
				"order",
				"orderSCC"
			],
			[
				"com",
				"computeSCC"
			],
			[
				"map",
				"mapOkM"
			],
			[
				"get",
				"getIx"
			],
			[
				"zip",
				"zipWithIndex"
			],
			[
				"fresh",
				"freshVar"
			],
			[
				"empt",
				"emptyCtx"
			],
			[
				"ms",
				"ms_8633"
			],
			[
				"main",
				"mainName_8632"
			],
			[
				"add",
				"addFree"
			],
			[
				"setA",
				"setAdd"
			],
			[
				"empty",
				"emptyCtx"
			],
			[
				"scopeT",
				"scopeTypesForGen"
			],
			[
				"process",
				"processClass"
			],
			[
				"skol",
				"skolemsInOrder"
			],
			[
				"skolem",
				"skolemsInOrder"
			],
			[
				"printT",
				"printType"
			],
			[
				"in",
				"instantiateBound"
			],
			[
				"instance",
				"instanceMatches"
			],
			[
				"sort",
				"sortBindings"
			],
			[
				"bind",
				"bindingToStmts"
			],
			[
				"fixTy",
				"fixTypeBound"
			],
			[
				"hasM",
				"hasMatchingInstance"
			],
			[
				"match",
				"matching"
			],
			[
				"scope",
				"bindingsToScope"
			],
			[
				"name",
				"namesUsed"
			],
			[
				"resolve",
				"resolveBounds"
			],
			[
				"prin",
				"printType"
			],
			[
				"new",
				"newtyper"
			],
			[
				"finali",
				"finalizeBindings"
			],
			[
				"repla",
				"replaceVar"
			],
			[
				"setT",
				"setToArray"
			],
			[
				"proces",
				"processInstances"
			],
			[
				"typed",
				"typedBindings"
			],
			[
				"type",
				"typedInstanceDefs"
			],
			[
				"local",
				"localClasses"
			],
			[
				"impor",
				"importedScope"
			],
			[
				"import",
				"importedInstances"
			],
			[
				"infer",
				"inferTopBindings"
			],
			[
				"TC",
				"TCBound"
			],
			[
				"Typ",
				"TypeBound"
			],
			[
				"TypeB",
				"TypeBoundCtx"
			],
			[
				"int",
				"intToString"
			],
			[
				"Type",
				"TypeEquivCtx"
			],
			[
				"c",
				"compareS"
			],
			[
				"comp",
				"compareSkolems"
			],
			[
				"oset",
				"osetIndexOf"
			],
			[
				"sko",
				"skolemsInType"
			],
			[
				"sk",
				"skolemsInType"
			],
			[
				"compa",
				"compareArr"
			],
			[
				"compare",
				"compareType"
			],
			[
				"equi",
				"equivType"
			],
			[
				"fin",
				"finalizeTypeBound"
			],
			[
				"fina",
				"finalizeType"
			],
			[
				"resol",
				"resolveRins"
			],
			[
				"E",
				"Empty"
			],
			[
				"addR",
				"addRequiredBounds"
			],
			[
				"repl",
				"replaceSkolems"
			],
			[
				"replace",
				"replaceSkolemsTB"
			],
			[
				"instant",
				"instantiateBound"
			],
			[
				"al",
				"allowedSkolem"
			],
			[
				"getB",
				"getBinding"
			],
			[
				"vars",
				"varsInType"
			],
			[
				"for",
				"forallEquiv"
			],
			[
				"must",
				"mustParseScope"
			],
			[
				"mustP",
				"mustParseBindings"
			],
			[
				"mus",
				"mustParseModule"
			],
			[
				"assertT",
				"assertTypecheckOk"
			],
			[
				"check",
				"checkBindings"
			],
			[
				"free",
				"freeVars"
			],
			[
				"pre",
				"prepareBindings"
			],
			[
				"bin",
				"bindingsToScope"
			],
			[
				"spli",
				"splitBindings"
			],
			[
				"finalize",
				"finalizePat"
			],
			[
				"finaliz",
				"finalizeExpr"
			],
			[
				"ass",
				"assertEq"
			],
			[
				"unify",
				"unifyM"
			],
			[
				"Pat",
				"PatCtx"
			],
			[
				"uni",
				"unifyM"
			],
			[
				"Emp",
				"emptyAnn"
			],
			[
				"Ep",
				"ExprCtx"
			],
			[
				"look",
				"lookupBinding"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/Default/Syntax Tests.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Default/Syntax Tests.sublime-build",
					""
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"All Syntaxes"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Performance"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Regex Compatibility"
				]
			],
			[
				"Packages/Default/Syntax Tests.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"Package Control: Discover Packages"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": true,
		"side_bar_visible": true,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/orczykm/projects/jaguar",
		"/home/orczykm/projects/jaguar/bazel-jaguar",
		"/home/orczykm/projects/jaguar/bazel-jaguar/bazel-out",
		"/home/orczykm/projects/jaguar/bazel-jaguar/bazel-out/host",
		"/home/orczykm/projects/jaguar/bazel-jaguar/bazel-out/host/bin",
		"/home/orczykm/projects/jaguar/bazel-jaguar/bazel-out/host/bin/compiler",
		"/home/orczykm/projects/jaguar/compiler",
		"/home/orczykm/projects/jaguar/compiler/e2e",
		"/home/orczykm/projects/jaguar/compiler/js",
		"/home/orczykm/projects/jaguar/compiler/test"
	],
	"file_history":
	[
		"/home/orczykm/projects/jaguar/compiler/typing.md",
		"/home/orczykm/projects/jaguar/compiler/newtyper.jg",
		"/home/orczykm/projects/jaguar/compiler/js/jaguarToJs.jg",
		"/home/orczykm/projects/jaguar/compiler/bin/c0.40.jg.js",
		"/home/orczykm/projects/jaguar/compiler/newtyper_test.jg",
		"/home/orczykm/projects/jaguar/compiler/compiler.jg",
		"/home/orczykm/projects/jaguar/compiler/TODO.md",
		"/home/orczykm/projects/jaguar/compiler/declasser.jg",
		"/home/orczykm/projects/jaguar/compiler/uniquifier.jg",
		"/home/orczykm/projects/jaguar/compiler/BUILD",
		"/home/orczykm/projects/jaguar/compiler/roadmap.md",
		"/home/orczykm/projects/jaguar/compiler/jaguar.bzl",
		"/home/orczykm/projects/jaguar/compiler/jaguarParser.jg",
		"/home/orczykm/projects/jaguar/compiler/prelude.jg",
		"/home/orczykm/projects/jaguar/compiler/ast.jg",
		"/home/orczykm/projects/jaguar/compiler/printer.jg",
		"/home/orczykm/projects/jaguar/compiler/inliner.jg",
		"/home/orczykm/projects/jaguar/bazel-jaguar/bazel-out/host/bin/compiler/stage2_js.jg.js",
		"/home/orczykm/projects/jaguar/compiler/typeutil_test.jg",
		"/home/orczykm/projects/jaguar/compiler/node.bzl",
		"/home/orczykm/projects/jaguar/bazel-bin/compiler/stage1_js.jg.js",
		"/home/orczykm/projects/jaguar/bazel-bin/compiler/stage2_js.jg.js",
		"/home/orczykm/projects/jaguar/compiler/bin/BUILD",
		"/home/orczykm/projects/jaguar/bazel-bin/compiler/typeutil_test.runfiles_manifest",
		"/home/orczykm/projects/jaguar/compiler/typeutil.jg",
		"/home/orczykm/projects/jaguar/compiler/typechecker.jg",
		"/home/orczykm/projects/jaguar/compiler/ctx.jg",
		"/home/orczykm/projects/jaguar/compiler/typechecker_test.jg",
		"/home/orczykm/projects/jaguar/compiler/bin/c0.39.jg.js",
		"/home/orczykm/projects/jaguar/compiler/adt.jg",
		"/home/orczykm/projects/jaguar/compiler/lambdaLifter.jg",
		"/home/orczykm/projects/jaguar/compiler/importNormalizer.jg",
		"/home/orczykm/projects/jaguar/compiler/typer.jg",
		"/home/orczykm/projects/jaguar/compiler/e2e/basic_module_test.jg",
		"/home/orczykm/projects/jaguar/compiler/js/ast.jg",
		"/home/orczykm/projects/jaguar/compiler/js/printer.jg",
		"/home/orczykm/projects/jaguar/compiler/solver.jg",
		"/home/orczykm/projects/jaguar/compiler/jaguarLexer.jg",
		"/home/orczykm/projects/jaguar/compiler/test/test.jg",
		"/home/orczykm/projects/jaguar/compiler/result.jg",
		"/home/orczykm/projects/jaguar/compiler/builtins.js",
		"/home/orczykm/projects/jaguar/jaguar.sublime-syntax",
		"/home/orczykm/projects/jaguar/compiler/pass.jg"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 98.0,
		"where_history":
		[
			"/home/orczykm/projects/jaguar/compiler"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"TUnknown",
			"className",
			"$instance_15_",
			"$instance_1 =",
			"$instance_15 =",
			"rewriteExpr",
			"JSConst",
			"parse",
			"contains",
			"scc",
			"Parser_7606",
			"Parser_76",
			"ParserP",
			"split",
			"scc",
			"debug",
			"loop",
			"zipWithIndex2_2354",
			"head_520",
			"equivType",
			"Inst ",
			"bound",
			"assertTFail",
			"assertFail",
			"assertTOk",
			"bound",
			"instantiateB",
			"TForall",
			"bound",
			"TCB",
			"resolveBound",
			"inst ",
			"Inst ",
			"Inst",
			"bound",
			"finalizeTypeB",
			"bound",
			"inst",
			"bound",
			"printTypeBound",
			"fromJust",
			"bound",
			"forceType",
			"timed",
			"main",
			"Pair_3",
			"inline_8584",
			"inline_4900",
			"freeVars ",
			"simpleExp",
			"simpleExprP",
			"debug",
			")\n",
			"debug",
			"c",
			"match",
			"unknown",
			"scc",
			"rocessPatt",
			"loopPasses",
			"force",
			"resolveType",
			"ctx",
			"unknow",
			"<<",
			"ctx",
			"ctx = []",
			"ctx",
			"US ",
			"scope",
			"env",
			"rewriteExpr",
			"rewriteInstance",
			"instanceNameFromBound",
			"rewriteInstance",
			"fixT",
			"fixSkol",
			"fixSkolems",
			"**",
			"replaceVar",
			"concat",
			"fixSkolems",
			"fix",
			"**",
			"tvar",
			"TVar",
			"fixType",
			"processC",
			"classToBindings",
			"freeVars",
			"instantiate",
			"skolemizeSubs",
			"instanceToTypeBound",
			"applySubsBound",
			"classToBindings",
			"unify",
			"satisfiesBound",
			"Tvar",
			"TVar",
			"emptyEnv",
			"skolemizeType",
			"generalize",
			" Inst",
			"instFromDef",
			"inst",
			"addInstance",
			" s ",
			" Inst",
			"importsToTypeEnv",
			"getTypedExports",
			"newCtx",
			"**",
			"Monoid",
			"fmap",
			"generalize",
			"instantiate",
			"tapp",
			"US ",
			"'\n",
			"gen",
			"gen ",
			"gen  ",
			"Gen",
			"checkEquiv",
			"assert",
			"printCtx",
			"mapOk",
			"withError"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"assertErr",
			"assertOk",
			"ctx = emptyCtx"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "jaguar.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 278.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
